services:
  web:
    build: .
    container_name: rag-web
    ports:
      - "60302:3000"
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - SECRET=${SECRET}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - NEXTAUTH_URL=${NEXTAUTH_URL}
      - NEXTAUTH_URL_INTERNAL=${NEXTAUTH_URL_INTERNAL}
      - NEXTAUTH_TRUSTED_HOSTS=${NEXTAUTH_TRUSTED_HOSTS}
      - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
      - NEXT_PUBLIC_SDC_Document_URL=${NEXT_PUBLIC_SDC_Document_URL}
      - NEXT_PUBLIC_AGENT_ID=${NEXT_PUBLIC_AGENT_ID}
      - API_KEY=${API_KEY}
      - NEXT_PUBLIC_SDC_API_URL=${NEXT_PUBLIC_SDC_API_URL}
      - NEXT_PUBLIC_SDC_KB_IDS=${NEXT_PUBLIC_SDC_KB_IDS}
    depends_on:
      db:
        condition: service_healthy
    restart: always
    networks:
      - rag-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: postgres:15
    container_name: rag-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - D:\docker_data\postgres:/var/lib/postgresql/data # Windows
      #- ./data/postgres:/var/lib/postgresql/data          # Linux
    restart: always
    networks:
      - rag-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  rag-network:
    name: rag-network
    driver: bridge